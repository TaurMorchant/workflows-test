name: Go build + Sonar

on:
  workflow_call:
    inputs:
      go-version:
        required: false
        type: string
        default: "1.24.2"
      working-directory:
        required: false
        type: string
        default: "."
      sonar-project-key:
        required: true
        type: string
    secrets:
      sonar-token:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ inputs.go-version }}

      - name: Install Sonar Scanner
        run: npm install -g sonar-scanner@3.1.0

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        working-directory: ${{ inputs.working-directory }}
        run: go mod download

      - name: Test with coverage
        working-directory: ${{ inputs.working-directory }}
        run: go test -v ./... -coverprofile coverage.out

      - name: Upload coverage report to SonarCloud
        working-directory: ${{ inputs.working-directory }}
        run: |
          sonar-scanner \
            -Dproject.settings=sonar-project.properties \
            -Dsonar.projectKey=${{ inputs.sonar-project-key }} \
            -Dsonar.organization=${{ vars.SONAR_ORGANIZATION }} \
            -Dsonar.host.url=${{ vars.SONAR_HOST_URL }} \
            -Dsonar.go.coverage.reportPaths=coverage.out
        env:
          SONAR_TOKEN: ${{ secrets.sonar-token }}
