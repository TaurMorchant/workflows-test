name: Go build + Sonar

on:
  workflow_call:
    inputs:
      working-directory:
        required: false
        type: string
        default: "."
      # Sonar configuration
      sonar-project-key:
        description: 'Sonar project key for analysis. It must be specified explicitly, as the qubership-core-infra repository may have its own sonar-project-key. '
        required: false
        type: string
    secrets:
      sonar-token:
        description: 'Token for Sonar authentication'
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Find go.mod files
        id: find
        run: |
          GO_MOD_FILE=$(find . -name go.mod | head -n 1)
          if [ -f ${GO_MOD_FILE} ]; then
            echo "GO_MOD_FILE=${GO_MOD_FILE}" >> $GITHUB_ENV
            echo "GO_MOD_DIR=$(dirname ${GO_MOD_FILE})" >> $GITHUB_ENV
            MODULE=$(cat ${GO_MOD_FILE} | grep -e "^module " | awk '{print $2}')
            echo "MODULE=${MODULE}" >> $GITHUB_ENV
          else
            echo "No go.mod file found"
            exit 1
          fi
        shell: bash

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          cache: true
          cache-dependency-path: "**/*.sum"
          go-version-file: "${{ env.GO_MOD_FILE }}"

      - name: Install Sonar Scanner
        run: npm install -g sonar-scanner@3.1.0

      - name: Test with coverage
        working-directory: ${{ inputs.working-directory }}
        run: go test -v ./... -coverprofile coverage.out

      - name: Upload coverage report to SonarCloud
        working-directory: ${{ inputs.working-directory }}
        run: |
          sonar-scanner \
            -Dproject.settings=sonar-project.properties \
            -Dsonar.projectKey=${{ inputs.sonar-project-key }} \
            -Dsonar.organization=${{ vars.SONAR_ORGANIZATION }} \
            -Dsonar.host.url=${{ vars.SONAR_HOST_URL }} \
            -Dsonar.go.coverage.reportPaths=coverage.out
        env:
          SONAR_TOKEN: ${{ secrets.sonar-token }}
