# This workflow handles Maven builds with optional Sonar analysis.
# It can be called from other workflows and supports different build modes based on:
# - Event type (pull_request or push or workflow_dispatch)
# - Actor type (bot or user)
#
# Build modes:
# 1. Pull Request:
#    - Always uses 'verify' goal
#    - Sonar analysis is skipped for restricted actors
# 2. Push:
#    - Uses 'verify' goal for restricted actors
#    - Uses 'deploy' goal for non-restricted actors
#    - Sonar analysis is skipped for restricted actors
# 3. Workflow Dispatch:
#    - Uses 'verify' goal for dry-run
#    - Uses 'deploy' goal for non-dry-run
#    - Sonar analysis is skipped for restricted actors
#
# Sonar analysis:
# - Only runs if both sonar-project-key and sonar-token are provided
# - Always skipped for restricted actors
# - Requires proper Sonar configuration (organization, host URL, etc.)
#
# Restricted actors:
# - Defined in .github/config/build-config.yaml
# - Cannot deploy artifacts
# - Cannot run Sonar analysis

name: Maven build + Sonar

on:
  workflow_call:
    inputs:
      # Event information
      event-name:
        description: 'Type of event that triggered the workflow (pull_request or push)'
        required: true
        type: string
      actor:
        description: 'GitHub actor (user or bot) that triggered the workflow'
        required: true
        type: string

      # Build configuration
      java-version:
        description: 'Java version to use for the build'
        required: false
        type: string
        default: "21"
      pom-file-path:
        description: 'Optional path to a specific pom.xml file. If not provided, the default pom.xml will be used without -f flag'
        required: false
        type: string
      ref:
        description: 'Git reference to use for the build'
        required: false
        type: string
      dry-run:
        description: 'Whether to run the build in dry-run mode'
        required: false
        type: boolean
        default: false

      # Artifact configuration
      upload-artifact:
        description: 'Whether to upload build artifacts'
        required: false
        type: boolean
        default: false
      upload-artifact-name:
        description: 'Name for the uploaded artifact. If not provided, "pre-built-artifact" will be used'
        required: false
        type: string
        default: "pre-built-artifact"

      # Sonar configuration
      sonar-project-key:
        description: 'Sonar project key for analysis'
        required: false
        type: string

    secrets:
      sonar-token:
        description: 'Token for Sonar authentication'
        required: false

jobs:
  prepare-variables:
    name: Prepare build variables
    runs-on: ubuntu-latest
    outputs:
      maven-goal: ${{ steps.prepare.outputs.maven-goal }}
      run-sonar: ${{ steps.prepare.outputs.run-sonar }}
    steps:
      - name: Checkout workflow repository
        uses: actions/checkout@v4
        with:
          repository: netcracker/qubership-core-infra
          ref: main
          path: workflow-repo

      - name: Prepare variables
        id: prepare
        run: |
          echo "::info:: Storing input variables..."
          ACTOR="${{ inputs.actor }}"
          EVENT_NAME="${{ inputs.event-name }}"
          CONFIG_FILE="workflow-repo/.github/config/build-config.yaml"
          DRY_RUN="${{ inputs.dry-run }}"

          echo "::info:: Validating config file exists..."
          if [ ! -f "$CONFIG_FILE" ]; then
            echo "::error:: Configuration file not found: $CONFIG_FILE"
            exit 1
          fi

          echo "::info:: Validating event..."
          if [ "$EVENT_NAME" != "pull_request" ] && [ "$EVENT_NAME" != "push" ] && [ "$EVENT_NAME" != "workflow_dispatch" ]; then
            echo "::error:: Unsupported event name: $EVENT_NAME. Only 'pull_request', 'push' and 'workflow_dispatch' are supported."
            exit 1
          fi

          echo "::info:: Checking if actor is restricted..."
          if yq e '.restricted-actors[]' "$CONFIG_FILE" | grep -Fxq "$ACTOR"; then
            IS_RESTRICTED_ACTOR=true
            echo "::info:: Actor $ACTOR is restricted"
          else
            IS_RESTRICTED_ACTOR=false
            echo "::info:: Actor $ACTOR is not restricted"
          fi

          echo "::info:: Setting maven goal based on event type and actor..."
          if [ "$EVENT_NAME" = "pull_request" ]; then
            echo "maven-goal=verify" >> $GITHUB_OUTPUT
          elif [ "$EVENT_NAME" = "push" ]; then
            if [ "$IS_RESTRICTED_ACTOR" = true ]; then
              echo "maven-goal=verify" >> $GITHUB_OUTPUT
            else
              echo "maven-goal=deploy" >> $GITHUB_OUTPUT
            fi
          elif [ "$EVENT_NAME" = "workflow_dispatch" ]; then
            if [ "$DRY_RUN" = "true" ]; then
              echo "maven-goal=verify" >> $GITHUB_OUTPUT
            else
              echo "maven-goal=deploy" >> $GITHUB_OUTPUT
            fi
          fi

          echo "::info:: Setting sonar run flag..."
          if [ -z "${{ inputs.sonar-project-key }}" ] || [ -z "${{ secrets.sonar-token }}" ]; then
            echo "::info:: Sonar configuration is missing, skipping Sonar analysis"
            echo "run-sonar=false" >> $GITHUB_OUTPUT
          elif [ "$IS_RESTRICTED_ACTOR" = true ]; then
            echo "run-sonar=false" >> $GITHUB_OUTPUT
          else
            echo "run-sonar=true" >> $GITHUB_OUTPUT
          fi

      - name: Output build configuration
        run: |
          echo "::info:: Maven goal: ${{ steps.prepare.outputs.maven-goal }}"
          echo "::info:: Run Sonar: ${{ steps.prepare.outputs.run-sonar }}"

  mvn-with-sonar:
    name: Build with Sonar analysis
    needs: prepare-variables
    if: needs.prepare-variables.outputs.run-sonar == 'true'
    uses: netcracker/qubership-workflow-hub/.github/workflows/maven-publish.yml@v1.0.1
    with:
      maven-command: >
        --batch-mode ${{ needs.prepare-variables.outputs.maven-goal }}
        -Dgpg.skip=true 
        org.sonarsource.scanner.maven:sonar-maven-plugin:${{ vars.SONAR_PLUGIN_VERSION }}:sonar 
        -Dsonar.projectKey=${{ inputs.sonar-project-key }}
        -Dsonar.organization=${{ vars.SONAR_ORGANIZATION }} 
        -Dsonar.host.url=${{ vars.SONAR_HOST_URL }} 
        ${{ inputs.pom-file-path && format('-f {0}', inputs.pom-file-path) || '' }}
      server-id: github
      java-version: ${{ inputs.java-version }}
      ref: ${{ inputs.ref }}
      upload-artifact: ${{ inputs.upload-artifact }}
      artifact-id: ${{ inputs.upload-artifact-name }}
    secrets:
      maven-token: ${{ secrets.GITHUB_TOKEN }}
      sonar-token: ${{ secrets.sonar-token }}

  mvn-without-sonar:
    name: Build without Sonar analysis
    needs: prepare-variables
    if: needs.prepare-variables.outputs.run-sonar == 'false'
    uses: netcracker/qubership-workflow-hub/.github/workflows/maven-publish.yml@v1.0.1
    with:
      maven-command: >
        --batch-mode ${{ needs.prepare-variables.outputs.maven-goal }}
        -Dgpg.skip=true
        ${{ inputs.pom-file-path && format('-f {0}', inputs.pom-file-path) || '' }}
      server-id: github
      java-version: ${{ inputs.java-version }}
      ref: ${{ inputs.ref }}
      upload-artifact: ${{ inputs.upload-artifact }}
      artifact-id: ${{ inputs.upload-artifact-name }}
    secrets:
      maven-token: ${{ secrets.GITHUB_TOKEN }}